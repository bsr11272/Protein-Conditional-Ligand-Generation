<svg viewBox="0 0 1200 2400" xmlns="http://www.w3.org/2000/svg" font-family="Arial, sans-serif">
  <!-- Background and title -->
  <rect width="1200" height="2400" fill="#f9f9f9"/>
  <text x="600" y="40" font-size="24" font-weight="bold" text-anchor="middle">Multi-Scale Graph Diffusion Model for Protein-Ligand Binding</text>
  
  <!-- Data Preparation Section -->
  <rect x="50" y="70" width="1100" height="380" fill="#e6f7ff" stroke="#0099cc" stroke-width="2" rx="10"/>
  <text x="600" y="100" font-size="20" font-weight="bold" text-anchor="middle">Data Preparation</text>
  
  <!-- Protein Processing -->
  <rect x="100" y="130" width="300" height="250" fill="#ffffff" stroke="#0099cc" stroke-width="2" rx="5"/>
  <text x="250" y="155" font-size="16" font-weight="bold" text-anchor="middle">Protein Embedding Generation</text>
  <text x="250" y="180" font-size="14" text-anchor="middle">generate_protein_embeddings()</text>
  <line x1="100" y1="185" x2="400" y2="185" stroke="#0099cc" stroke-width="1"/>
  <text x="120" y="210" font-size="12">Input:</text>
  <text x="140" y="230" font-size="12">• Protein sequences</text>
  <text x="140" y="250" font-size="12">• Max sequence length</text>
  <text x="120" y="280" font-size="12">Output:</text>
  <text x="140" y="300" font-size="12">• Protein embeddings</text>
  <text x="140" y="320" font-size="12">  [num_proteins × seq_len × 1280]</text>
  <text x="140" y="340" font-size="12">• Protein → embedding ID mapping</text>
  
  <!-- Ligand Processing -->
  <rect x="450" y="130" width="300" height="250" fill="#ffffff" stroke="#0099cc" stroke-width="2" rx="5"/>
  <text x="600" y="155" font-size="16" font-weight="bold" text-anchor="middle">Ligand Multi-Scale Processing</text>
  <text x="600" y="180" font-size="14" text-anchor="middle">process_smiles_batch_multiscale()</text>
  <line x1="450" y1="185" x2="750" y2="185" stroke="#0099cc" stroke-width="1"/>
  <text x="470" y="210" font-size="12">Input:</text>
  <text x="490" y="230" font-size="12">• SMILES strings</text>
  <text x="470" y="260" font-size="12">Output:</text>
  <text x="490" y="280" font-size="12">• Level 1: Scaffold graphs</text>
  <text x="490" y="300" font-size="12">• Level 2: Fragment graphs</text>
  <text x="490" y="320" font-size="12">• Level 3: Complete molecule graph</text>
  <text x="490" y="340" font-size="12">• Molecular properties</text>
  
  <!-- Combined Dataset -->
  <rect x="800" y="130" width="300" height="250" fill="#ffffff" stroke="#0099cc" stroke-width="2" rx="5"/>
  <text x="950" y="155" font-size="16" font-weight="bold" text-anchor="middle">Combined Dataset Creation</text>
  <text x="950" y="180" font-size="14" text-anchor="middle">create_multiscale_combined_dataset()</text>
  <line x1="800" y1="185" x2="1100" y2="185" stroke="#0099cc" stroke-width="1"/>
  <text x="820" y="210" font-size="12">Input:</text>
  <text x="840" y="230" font-size="12">• Protein embeddings</text>
  <text x="840" y="250" font-size="12">• Ligand multi-scale data</text>
  <text x="840" y="270" font-size="12">• Binding affinity values</text>
  <text x="820" y="300" font-size="12">Output:</text>
  <text x="840" y="320" font-size="12">• Combined dataset with protein-ligand</text>
  <text x="840" y="340" font-size="12">  pairs and binding affinities</text>
  
  <!-- Arrows connecting preparation steps -->
  <path d="M400 230 L450 230" stroke="#0099cc" stroke-width="2" fill="none" marker-end="url(#arrow)"/>
  <path d="M750 230 L800 230" stroke="#0099cc" stroke-width="2" fill="none" marker-end="url(#arrow)"/>
  
  <!-- Dataset Section -->
  <rect x="50" y="470" width="1100" height="360" fill="#e6ffe6" stroke="#009933" stroke-width="2" rx="10"/>
  <text x="600" y="500" font-size="20" font-weight="bold" text-anchor="middle">Dataset and DataLoader</text>
  
  <!-- Dataset Class -->
  <rect x="100" y="530" width="500" height="250" fill="#ffffff" stroke="#009933" stroke-width="2" rx="5"/>
  <text x="350" y="555" font-size="16" font-weight="bold" text-anchor="middle">MultiScaleProteinLigandDataset</text>
  <line x1="100" y1="565" x2="600" y2="565" stroke="#009933" stroke-width="1"/>
  <text x="120" y="590" font-size="12">Input:</text>
  <text x="140" y="610" font-size="12">• Data path, split type ('train', 'val', 'test')</text>
  <text x="140" y="630" font-size="12">• Max atoms, test/val sizes</text>
  <text x="120" y="660" font-size="12">Output (per item):</text>
  <text x="140" y="680" font-size="12">• protein_embedding [seq_len × 1280]</text>
  <text x="140" y="700" font-size="12">• affinity [1]</text>
  <text x="140" y="720" font-size="12">• level1_graph, level2_graphs, level3_graph</text>
  <text x="140" y="740" font-size="12">• ligand_properties, physics_features</text>
  
  <!-- Collate Function -->
  <rect x="650" y="530" width="450" height="250" fill="#ffffff" stroke="#009933" stroke-width="2" rx="5"/>
  <text x="875" y="555" font-size="16" font-weight="bold" text-anchor="middle">Data Collation</text>
  <text x="875" y="580" font-size="14" text-anchor="middle">collate_multi_scale_data()</text>
  <line x1="650" y1="590" x2="1100" y2="590" stroke="#009933" stroke-width="1"/>
  <text x="670" y="620" font-size="12">Input:</text>
  <text x="690" y="640" font-size="12">• Batch of dataset items</text>
  <text x="670" y="670" font-size="12">Output:</text>
  <text x="690" y="690" font-size="12">• Batched protein_embeddings [batch × seq_len × 1280]</text>
  <text x="690" y="710" font-size="12">• Batched affinities [batch]</text>
  <text x="690" y="730" font-size="12">• Batched graph structures at three levels</text>
  <text x="690" y="750" font-size="12">• Batched properties and features</text>
  
  <!-- Arrow connecting Dataset and Collate -->
  <path d="M600 650 L650 650" stroke="#009933" stroke-width="2" fill="none" marker-end="url(#arrow)"/>
  
  <!-- Create DataLoaders -->
  <rect x="300" y="800" width="600" height="100" fill="#ffffff" stroke="#009933" stroke-width="2" rx="5"/>
  <text x="600" y="830" font-size="16" font-weight="bold" text-anchor="middle">create_data_loaders()</text>
  <text x="600" y="860" font-size="14" text-anchor="middle">Returns train_loader, val_loader, test_loader</text>
  
  <!-- Arrows connecting to DataLoaders -->
  <path d="M350 780 L350 800" stroke="#009933" stroke-width="2" fill="none" marker-end="url(#arrow)"/>
  <path d="M875 780 L875 800" stroke="#009933" stroke-width="2" fill="none" marker-end="url(#arrow)"/>
  
  <!-- Model Architecture Section -->
  <rect x="50" y="920" width="1100" height="830" fill="#fff0e6" stroke="#ff6600" stroke-width="2" rx="10"/>
  <text x="600" y="950" font-size="20" font-weight="bold" text-anchor="middle">Model Architecture</text>
  
  <!-- Main Model -->
  <rect x="300" y="970" width="600" height="130" fill="#ffffff" stroke="#ff6600" stroke-width="2" rx="5"/>
  <text x="600" y="995" font-size="16" font-weight="bold" text-anchor="middle">MultiScaleGraphDiffusion</text>
  <line x1="300" y1="1005" x2="900" y2="1005" stroke="#ff6600" stroke-width="1"/>
  <text x="320" y="1030" font-size="12">Main model that combines protein encoder, three levels of diffusion processes</text>
  <text x="320" y="1050" font-size="12">for scaffold, fragments, and full molecule, plus affinity prediction</text>
  <text x="320" y="1070" font-size="12">Training: forward() | Generation: sample()</text>
  
  <!-- Component Modules -->
  <!-- Protein Encoder -->
  <rect x="100" y="1130" width="500" height="140" fill="#ffffff" stroke="#ff6600" stroke-width="2" rx="5"/>
  <text x="350" y="1155" font-size="16" font-weight="bold" text-anchor="middle">ProteinEncoder</text>
  <line x1="100" y1="1165" x2="600" y2="1165" stroke="#ff6600" stroke-width="1"/>
  <text x="120" y="1190" font-size="12">Input: Protein embeddings [batch × seq_len × 1280]</text>
  <text x="120" y="1210" font-size="12">Architecture: LSTM or self-attention over sequence</text>
  <text x="120" y="1230" font-size="12">Output: Three conditioning vectors [batch × 128]</text>
  <text x="120" y="1250" font-size="12">(one for each level of diffusion)</text>
  
  <!-- Graph Neural Networks -->
  <rect x="650" y="1130" width="450" height="140" fill="#ffffff" stroke="#ff6600" stroke-width="2" rx="5"/>
  <text x="875" y="1155" font-size="16" font-weight="bold" text-anchor="middle">GraphEncoderBlock / ConditionalGraphBlock</text>
  <line x1="650" y1="1165" x2="1100" y2="1165" stroke="#ff6600" stroke-width="1"/>
  <text x="670" y="1190" font-size="12">Input: Node features, edge indices, edge features, condition</text>
  <text x="670" y="1210" font-size="12">Architecture: GNN layers with message passing and attention</text>
  <text x="670" y="1230" font-size="12">Output: Updated node features with conditioning incorporated</text>
  
  <!-- Diffusion Models -->
  <rect x="100" y="1300" width="1050" height="230" fill="#ffffff" stroke="#ff6600" stroke-width="2" rx="5"/>
  <text x="625" y="1325" font-size="16" font-weight="bold" text-anchor="middle">Three-Level Diffusion Process</text>
  <line x1="100" y1="1335" x2="1150" y2="1335" stroke="#ff6600" stroke-width="1"/>
  
  <!-- Level 1 -->
  <rect x="120" y="1350" width="320" height="160" fill="#fff9e6" stroke="#ff9900" stroke-width="1" rx="5"/>
  <text x="280" y="1370" font-size="14" font-weight="bold" text-anchor="middle">Level 1: Scaffold Diffusion</text>
  <text x="280" y="1390" font-size="12" text-anchor="middle">GraphDiffusion + GraphDenoiser</text>
  <text x="130" y="1420" font-size="11">Input: Scaffold graph features, protein condition</text>
  <text x="130" y="1440" font-size="11">Forward: Add noise according to timestep</text>
  <text x="130" y="1460" font-size="11">Backward: Denoise to generate scaffold</text>
  <text x="130" y="1480" font-size="11">Output: Scaffold graph / Scaffold loss</text>
  
  <!-- Level 2 -->
  <rect x="460" y="1350" width="320" height="160" fill="#fff9e6" stroke="#ff9900" stroke-width="1" rx="5"/>
  <text x="620" y="1370" font-size="14" font-weight="bold" text-anchor="middle">Level 2: Fragment Diffusion</text>
  <text x="620" y="1390" font-size="12" text-anchor="middle">GraphDiffusion + GraphDenoiser</text>
  <text x="470" y="1420" font-size="11">Input: Fragment graphs, scaffold condition</text>
  <text x="470" y="1440" font-size="11">Forward: Add noise according to timestep</text>
  <text x="470" y="1460" font-size="11">Backward: Denoise to generate fragments</text>
  <text x="470" y="1480" font-size="11">Output: Fragment graphs / Fragment loss</text>
  
  <!-- Level 3 -->
  <rect x="800" y="1350" width="320" height="160" fill="#fff9e6" stroke="#ff9900" stroke-width="1" rx="5"/>
  <text x="960" y="1370" font-size="14" font-weight="bold" text-anchor="middle">Level 3: Molecule Diffusion</text>
  <text x="960" y="1390" font-size="12" text-anchor="middle">GraphDiffusion + GraphDenoiser</text>
  <text x="810" y="1420" font-size="11">Input: Molecule graph, scaffold+fragment condition</text>
  <text x="810" y="1440" font-size="11">Forward: Add noise according to timestep</text>
  <text x="810" y="1460" font-size="11">Backward: Denoise to generate molecules</text>
  <text x="810" y="1480" font-size="11">Output: Molecule graph / Molecule loss</text>
  
  <!-- Affinity Prediction -->
  <rect x="300" y="1560" width="600" height="130" fill="#ffffff" stroke="#ff6600" stroke-width="2" rx="5"/>
  <text x="600" y="1585" font-size="16" font-weight="bold" text-anchor="middle">Affinity Prediction</text>
  <line x1="300" y1="1595" x2="900" y2="1595" stroke="#ff6600" stroke-width="1"/>
  <text x="320" y="1620" font-size="12">Input: Features from all three levels (scaffold, fragments, molecule)</text>
  <text x="320" y="1640" font-size="12">Architecture: MLP with concatenated features</text>
  <text x="320" y="1660" font-size="12">Output: Predicted binding affinity [batch × 1]</text>
  
  <!-- Arrows connecting model components -->
  <path d="M600 1100 L600 1130" stroke="#ff6600" stroke-width="2" fill="none" marker-end="url(#arrow)"/>
  <path d="M350 1270 L350 1300" stroke="#ff6600" stroke-width="2" fill="none" marker-end="url(#arrow)"/>
  <path d="M875 1270 L875 1300" stroke="#ff6600" stroke-width="2" fill="none" marker-end="url(#arrow)"/>
  <path d="M280 1510 L280 1625 L300 1625" stroke="#ff6600" stroke-width="2" fill="none" marker-end="url(#arrow)"/>
  <path d="M620 1510 L620 1625" stroke="#ff6600" stroke-width="2" fill="none" marker-end="url(#arrow)"/>
  <path d="M960 1510 L960 1625 L900 1625" stroke="#ff6600" stroke-width="2" fill="none" marker-end="url(#arrow)"/>
  
  <!-- Training and Generation Section -->
  <rect x="50" y="1770" width="1100" height="580" fill="#f3e6ff" stroke="#6600cc" stroke-width="2" rx="10"/>
  <text x="600" y="1800" font-size="20" font-weight="bold" text-anchor="middle">Training and Generation</text>
  
  <!-- Training -->
  <rect x="100" y="1830" width="500" height="280" fill="#ffffff" stroke="#6600cc" stroke-width="2" rx="5"/>
  <text x="350" y="1855" font-size="16" font-weight="bold" text-anchor="middle">MultiScaleGraphDiffusionTrainer</text>
  <line x1="100" y1="1865" x2="600" y2="1865" stroke="#6600cc" stroke-width="1"/>
  <text x="120" y="1890" font-size="12">Key methods:</text>
  
  <rect x="120" y="1905" width="460" height="40" fill="#f9f0ff" stroke="#6600cc" stroke-width="1" rx="3"/>
  <text x="130" y="1930" font-size="12">train_epoch(mode) → Train for one epoch with gradient accumulation</text>
  
  <rect x="120" y="1955" width="460" height="40" fill="#f9f0ff" stroke="#6600cc" stroke-width="1" rx="3"/>
  <text x="130" y="1980" font-size="12">validate(mode) → Validate model on validation set</text>
  
  <rect x="120" y="2005" width="460" height="40" fill="#f9f0ff" stroke="#6600cc" stroke-width="1" rx="3"/>
  <text x="130" y="2030" font-size="12">train(mode, resume_path) → Main training loop with checkpointing</text>
  
  <rect x="120" y="2055" width="460" height="40" fill="#f9f0ff" stroke="#6600cc" stroke-width="1" rx="3"/>
  <text x="130" y="2080" font-size="12">Hierarchical training: level1 → level2 → level3 → all together</text>
  
  <!-- Molecule Generation -->
  <rect x="650" y="1830" width="450" height="280" fill="#ffffff" stroke="#6600cc" stroke-width="2" rx="5"/>
  <text x="875" y="1855" font-size="16" font-weight="bold" text-anchor="middle">Molecule Generation</text>
  <line x1="650" y1="1865" x2="1100" y2="1865" stroke="#6600cc" stroke-width="1"/>
  <text x="670" y="1890" font-size="12">sample(protein_embedding, num_samples, device) method:</text>
  
  <rect x="670" y="1905" width="410" height="40" fill="#f9f0ff" stroke="#6600cc" stroke-width="1" rx="3"/>
  <text x="680" y="1930" font-size="12">1. Encode protein to get conditioning vectors</text>
  
  <rect x="670" y="1955" width="410" height="40" fill="#f9f0ff" stroke="#6600cc" stroke-width="1" rx="3"/>
  <text x="680" y="1980" font-size="12">2. Generate scaffold through reverse diffusion</text>
  
  <rect x="670" y="2005" width="410" height="40" fill="#f9f0ff" stroke="#6600cc" stroke-width="1" rx="3"/>
  <text x="680" y="2030" font-size="12">3. Generate fragments conditioned on scaffold</text>
  
  <rect x="670" y="2055" width="410" height="40" fill="#f9f0ff" stroke="#6600cc" stroke-width="1" rx="3"/>
  <text x="680" y="2080" font-size="12">4. Generate full molecule conditioned on scaffold+fragments</text>
  
  <!-- Molecule Conversion -->
  <rect x="300" y="2130" width="600" height="120" fill="#ffffff" stroke="#6600cc" stroke-width="2" rx="5"/>
  <text x="600" y="2155" font-size="16" font-weight="bold" text-anchor="middle">convert_graph_to_mol() / robust_convert_graph_to_mol()</text>
  <line x1="300" y1="2165" x2="900" y2="2165" stroke="#6600cc" stroke-width="1"/>
  <text x="320" y="2190" font-size="12">Input: Generated graph data (PyTorch Geometric Data object)</text>
  <text x="320" y="2210" font-size="12">Process: Convert graph to RDKit molecule with validity checks</text>
  <text x="320" y="2230" font-size="12">Output: RDKit Mol object for visualization and property calculation</text>
  
  <!-- Data flow between training and generation -->
  <path d="M350 2110 L350 2130" stroke="#6600cc" stroke-width="2" fill="none" marker-end="url(#arrow)"/>
  <path d="M875 2110 L875 2130" stroke="#6600cc" stroke-width="2" fill="none" marker-end="url(#arrow)"/>
  
  <!-- Overall Data Flow Arrows -->
  <path d="M600 450 L600 470" stroke="#000000" stroke-width="2" fill="none" marker-end="url(#arrow)"/>
  <path d="M600 900 L600 920" stroke="#000000" stroke-width="2" fill="none" marker-end="url(#arrow)"/>
  <path d="M600 1690 L600 1770" stroke="#000000" stroke-width="2" fill="none" marker-end="url(#arrow)"/>
  <path d="M600 2250 L600 2280" stroke="#000000" stroke-width="2" fill="none" marker-end="url(#arrow)"/>
  
  <!-- Final Output -->
  <rect x="300" y="2280" width="600" height="80" fill="#e6ffee" stroke="#009966" stroke-width="2" rx="10"/>
  <text x="600" y="2320" font-size="16" font-weight="bold" text-anchor="middle">Generated Molecules with Predicted Binding Affinity</text>
  <text x="600" y="2340" font-size="14" text-anchor="middle">RDKit Molecules + Affinity Values</text>
  
  <!-- Arrow markers definition -->
  <defs>
    <marker id="arrow" viewBox="0 0 10 10" refX="9" refY="5"
            markerWidth="6" markerHeight="6" orient="auto">
      <path d="M 0 0 L 10 5 L 0 10 z" fill="#000000"/>
    </marker>
  </defs>
</svg>
